{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/login/modalcontent/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./index.css\";\nimport InputField from \"./inputfield\";\nimport SubmitButton from \"./submitbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalContent = _ref => {\n  _s();\n\n  let {\n    setTabState,\n    tabState,\n    inputEmail,\n    setInputEmail,\n    inputPassword,\n    setInputPassword\n  } = _ref;\n  const [preEmail, setPreEmail] = useState(\"\");\n  const [prePass, setPrePass] = useState(\"\");\n  const [valiTime, setValiTime] = useState(false);\n  const fieldBlank = useRef(null);\n\n  const validator = (e, i) => {\n    let validresult = {\n      error: \"\",\n      validity: true\n    }; //setInterval(() => setValiTime(false), 10000);\n\n    if (!e) {\n      validresult.error = \"Invalid empty field.\";\n      validresult.validity = false;\n    }\n\n    if (i == \"email\") {\n      if (e.length > 10) {\n        if (e.slice(e.length - 10) != \"@gmail.com\") {\n          validresult.error = \"Invalid email. Only G-mail currently accepted.\";\n          validresult.validity = false;\n        }\n      } else {\n        validresult.error = \"Invalid email length.\";\n        validresult.validity = false;\n      }\n    }\n\n    return validresult;\n    /*set valid n stuff*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      valiTime: valiTime,\n      cname: 4,\n      tabState: tabState,\n      subject: \"Email\",\n      input: preEmail,\n      setInput: setPreEmail,\n      setValiTime: setValiTime,\n      validator: validator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      valiTime: valiTime,\n      cname: 3,\n      tabState: tabState,\n      subject: \"Password\",\n      input: prePass,\n      setInput: setPrePass,\n      validator: validator,\n      setValiTime: setValiTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      tabState: tabState,\n      setValiTime: setValiTime,\n      fieldBlank: fieldBlank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), (() => {\n      if (tabState == 1) return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"left\",\n          children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            onClick: () => setTabState(2),\n            children: [\" \", \"Sign up\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setTabState(3),\n            className: \"right\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);else if (tabState == 2) return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"left\",\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          onClick: () => setTabState(1),\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this);\n    })()]\n  }, void 0, true);\n};\n\n_s(ModalContent, \"+QYhj/lN17HweWXrHMxxVwiyNUw=\");\n\n_c = ModalContent;\nexport default ModalContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalContent\");","map":{"version":3,"names":["React","useRef","useState","InputField","SubmitButton","ModalContent","setTabState","tabState","inputEmail","setInputEmail","inputPassword","setInputPassword","preEmail","setPreEmail","prePass","setPrePass","valiTime","setValiTime","fieldBlank","validator","e","i","validresult","error","validity","length","slice"],"sources":["/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/login/modalcontent/index.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./index.css\";\n\nimport InputField from \"./inputfield\";\nimport SubmitButton from \"./submitbutton\";\n\nconst ModalContent = ({\n  setTabState,\n  tabState,\n  inputEmail,\n  setInputEmail,\n  inputPassword,\n  setInputPassword,\n}) => {\n  const [preEmail, setPreEmail] = useState(\"\");\n  const [prePass, setPrePass] = useState(\"\");\n  const [valiTime, setValiTime] = useState(false);\n  const fieldBlank = useRef(null);\n\n  const validator = (e, i) => {\n    let validresult = { error: \"\", validity: true };\n    //setInterval(() => setValiTime(false), 10000);\n    if (!e) {\n      validresult.error = \"Invalid empty field.\";\n      validresult.validity = false;\n    }\n    if (i == \"email\") {\n      if (e.length > 10) {\n        if (e.slice(e.length - 10) != \"@gmail.com\") {\n          validresult.error = \"Invalid email. Only G-mail currently accepted.\";\n          validresult.validity = false;\n        }\n      } else {\n        validresult.error = \"Invalid email length.\";\n        validresult.validity = false;\n      }\n    }\n\n    return validresult;\n    /*set valid n stuff*/\n  };\n\n  return (\n    <>\n      {/*<p>modalcontent</p>\n      <p>email component - returns value</p>*/}\n      <InputField\n        valiTime={valiTime}\n        cname={4}\n        tabState={tabState}\n        subject={\"Email\"}\n        input={preEmail}\n        setInput={setPreEmail}\n        setValiTime={setValiTime}\n        validator={validator}\n      />\n      {/*<a>{preEmail}</a>\n      <p>pw component - returns value</p>*/}\n      <InputField\n        valiTime={valiTime}\n        cname={3}\n        tabState={tabState}\n        subject={\"Password\"}\n        input={prePass}\n        setInput={setPrePass}\n        validator={validator}\n        setValiTime={setValiTime}\n      />\n      {/*<p>{prePass}</p>\n      \n      <p>\n        submit button - changes function to sign in 1, sign up 2, update pw 3\n  </p>*/}\n      <SubmitButton\n        tabState={tabState}\n        setValiTime={setValiTime}\n        fieldBlank={fieldBlank}\n      />\n      {/*<p>sign up/sign in link dpeending on tabState 1 or 2, or none if 3+</p>*/}\n      {(() => {\n        if (tabState == 1)\n          return (\n            <>\n              <p className={\"left\"}>\n                Don't have an account?\n                <span className={\"highlight\"} onClick={() => setTabState(2)}>\n                  {\" \"}\n                  Sign up\n                </span>\n                <span onClick={() => setTabState(3)} className=\"right\">\n                  Forgot Password?\n                </span>\n              </p>\n            </>\n          );\n        else if (tabState == 2)\n          return (\n            <p className={\"left\"}>\n              Already have an account?{\" \"}\n              <span className={\"highlight\"} onClick={() => setTabState(1)}>\n                Sign in\n              </span>\n            </p>\n          );\n      })()}\n    </>\n  );\n};\n\nexport default ModalContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}