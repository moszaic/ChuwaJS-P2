{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/login/modalcontent/inputfield/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputField = _ref => {\n  _s();\n\n  let {\n    subject,\n    cname,\n    tabState,\n    input,\n    setInput,\n    valiTime,\n    validator,\n    setValiTime,\n    setInputValue,\n    inputValue,\n    valindex,\n    inpval,\n    predest,\n    gridList,\n    wholedest,\n    phList,\n    setPhList,\n    objprop,\n    preDest,\n    loggedIn,\n    setLoggedIn,\n    setTabState\n  } = _ref;\n  {\n    /*const [isValid, setIsValid] = useState(true); \n    old spot*/\n  }\n\n  const textest = e => {\n    return e;\n  };\n\n  const idgi = () => {\n    console.log(valiTime);\n\n    if (valiTime) {\n      let x = validator(subject, input).validity;\n\n      if (x == 2) {\n        setLoggedIn(true);\n        setTabState(8);\n      }\n\n      return x ? 2 : 1;\n    } else {\n      return 3;\n    }\n  };\n\n  const tsobjmess = e => {\n    let a = Object.assign({}, e); //console.log(\"a:\");\n    //console.log(gridList[preDest]);\n\n    return a;\n  };\n\n  useEffect(() => {\n    if (tabState == 7) {\n      try {\n        //console.log(preDest);\n        setPhList(gridList[preDest]);\n      } catch (e) {\n        console.log(\"setting ph to gr issue\");\n        console.log(e);\n      }\n    }\n  }, []);\n\n  const valueexc = () => {\n    try {\n      //console.log(\"tester\");\n      //console.log(tsobjmess(phList)[objprop]);\n      //console.log(phList);\n      if (tabState <= 4) {\n        return inpval;\n      } else {\n        return tsobjmess(phList)[objprop];\n      }\n    } catch (e) {\n      console.log(\"this is likely phList being empty at the end\");\n      {\n        /*setPhList((prevState) => ({\n        product: prevState,\n        }));\n        return phList[\"product\"][objprop];*/\n      }\n      return predest;\n    }\n  };\n\n  const handleinpval = e => {\n    let x = Object.assign(inputValue);\n    x[inpval] = e.target.value;\n    setInputValue(x);\n  };\n\n  const handlePh = () => {\n    setPhList(gridList);\n    return phList;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tabState >= cname[0] && tabState <= cname[1] ? \"field\" : \"nodisplay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: subject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), console.log(\"phlist:\"), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: valueexc() || inpval,\n      onChange: tabState <= 4 ? e => {\n        setInput(e.target.value);\n        let x = Object.assign(inputValue);\n        x[valindex] = e.target.value;\n        setInputValue(x);\n        setValiTime(false);\n      } : e => {\n        let a = Object.assign({}, phList);\n        a[objprop] = e.target.value;\n        setPhList(a);\n      },\n      className: idgi() != 1 ? \"valid\" : \"invalid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errormsg\",\n      children: idgi() != 1 ? \"\" : validator(subject, input).error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputField, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InputField;\nexport default InputField;\n{\n  /*{console.log(phList[\"product\"][objprop])}*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useEffect","InputField","subject","cname","tabState","input","setInput","valiTime","validator","setValiTime","setInputValue","inputValue","valindex","inpval","predest","gridList","wholedest","phList","setPhList","objprop","preDest","loggedIn","setLoggedIn","setTabState","textest","e","idgi","console","log","x","validity","tsobjmess","a","Object","assign","valueexc","handleinpval","target","value","handlePh","error"],"sources":["/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/login/modalcontent/inputfield/index.tsx"],"sourcesContent":["import { tab } from \"@testing-library/user-event/dist/tab\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\ninterface typetester {\n  objprop: string;\n}\n\nconst InputField = ({\n  subject,\n  cname,\n  tabState,\n  input,\n  setInput,\n  valiTime,\n  validator,\n  setValiTime,\n  setInputValue,\n  inputValue,\n  valindex,\n  inpval,\n  predest,\n  gridList,\n  wholedest,\n  phList,\n  setPhList,\n  objprop,\n  preDest,\n  loggedIn,\n  setLoggedIn,\n  setTabState,\n}) => {\n  {\n    /*const [isValid, setIsValid] = useState(true); \nold spot*/\n  }\n\n  const textest = (e) => {\n    return e;\n  };\n\n  const idgi = () => {\n    console.log(valiTime);\n    if (valiTime) {\n      let x = validator(subject, input).validity;\n      if (x == 2) {\n        setLoggedIn(true);\n        setTabState(8);\n      }\n      return x ? 2 : 1;\n    } else {\n      return 3;\n    }\n  };\n\n  const tsobjmess = (e) => {\n    let a = Object.assign({}, e);\n    //console.log(\"a:\");\n    //console.log(gridList[preDest]);\n    return a;\n  };\n\n  useEffect(() => {\n    if (tabState == 7) {\n      try {\n        //console.log(preDest);\n        setPhList(gridList[preDest]);\n      } catch (e) {\n        console.log(\"setting ph to gr issue\");\n        console.log(e);\n      }\n    }\n  }, []);\n\n  const valueexc = () => {\n    try {\n      //console.log(\"tester\");\n      //console.log(tsobjmess(phList)[objprop]);\n      //console.log(phList);\n      if (tabState <= 4) {\n        return inpval;\n      } else {\n        return tsobjmess(phList)[objprop];\n      }\n    } catch (e) {\n      console.log(\"this is likely phList being empty at the end\");\n      {\n        /*setPhList((prevState) => ({\n        product: prevState,\n      }));\n    return phList[\"product\"][objprop];*/\n      }\n      return predest;\n    }\n  };\n\n  const handleinpval = (e) => {\n    let x = Object.assign(inputValue);\n    x[inpval] = e.target.value;\n    setInputValue(x);\n  };\n\n  const handlePh = () => {\n    setPhList(gridList);\n    return phList;\n  };\n\n  return (\n    <div\n      className={\n        tabState >= cname[0] && tabState <= cname[1] ? \"field\" : \"nodisplay\"\n      }\n    >\n      {/*textest(subject)*/}\n      <label>{subject}</label>\n      <br />\n      {console.log(\"phlist:\")}\n\n      <input\n        type=\"text\"\n        value={valueexc() || inpval}\n        onChange={\n          tabState <= 4\n            ? (e) => {\n                setInput(e.target.value);\n                let x = Object.assign(inputValue);\n                x[valindex] = e.target.value;\n                setInputValue(x);\n                setValiTime(false);\n              }\n            : (e) => {\n                let a = Object.assign({}, phList);\n                a[objprop] = e.target.value;\n                setPhList(a);\n              }\n        }\n        className={idgi() != 1 ? \"valid\" : \"invalid\"}\n      />\n      <p className=\"errormsg\">\n        {idgi() != 1 ? \"\" : validator(subject, input).error}\n      </p>\n    </div>\n  );\n};\n\nexport default InputField;\n{\n  /*{console.log(phList[\"product\"][objprop])}*/\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}