{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/login/modalcontent/submitbutton/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SubmitButton = _ref => {\n  _s();\n\n  let {\n    tabState,\n    setTabState,\n    setValiTime,\n    listkey,\n    setGridList,\n    phList,\n    gridList,\n    itemnum,\n    setPreDest,\n    preDest,\n    putuser,\n    validator,\n    cart,\n    setCart,\n    putposter,\n    apiValid,\n    checkLogin,\n    inputValue,\n    setInputValue,\n    putStatus,\n    carTotal,\n    setCarTotal,\n    userName,\n    setUserName,\n    sortList,\n    setSortList,\n    setPageNum,\n    pageNum,\n    chosenOne,\n    setChosenOne,\n    setEmailErr\n  } = _ref;\n  //const [apiValid, setApiValid] = useState(false);\n  const [plusMin, setPlusMin] = useState(true); //const [localErr, setLocalErr] = useState(false);\n\n  const [wtfupdate, setWtfupdate] = useState(0); //const [deleteDone, setDeleteDone] = useState(true);\n\n  let localErr = false;\n\n  const buttonDirector = e => {\n    switch (e) {\n      case 1:\n        return \"Sign In\";\n\n      case 2:\n        return \"Create Account\";\n\n      case 3:\n        return \"Update Password\";\n\n      case 5:\n        return \"Add\";\n\n      case 6:\n        return \"Add to Cart\";\n\n      case 7:\n        return \"Save Product\";\n\n      case 8:\n        return \"Grid\";\n    }\n  };\n\n  const btD2 = e => {\n    if (e < 4) {\n      return \"purplebutton\";\n    } else if (e == 5) {\n      return \"griditem\";\n    } else if (e == 6) {\n      return \"purplebuttonleft\";\n    } else if (e == 7 || e == 8) {\n      return \"purplebutton\";\n    } else {\n      return \"nobutton\";\n    }\n  };\n\n  const movebehavior = e => {\n    switch (e) {\n      case 1:\n        return 8;\n\n      case 2:\n        if (localErr == true) {\n          return 2;\n        } else {\n          return 1;\n        }\n\n      case 3:\n        return 4;\n\n      case 5:\n        return 8;\n\n      case 6:\n        return 8;\n\n      case 7:\n        return 8;\n\n      case 8:\n        return 7;\n\n      default:\n        return 1;\n    }\n  };\n\n  const numfix = e => {\n    return e;\n  };\n\n  const getProducts = async () => {\n    const x = await fetch(\"http://localhost:3002/gridList\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      //console.log(\"result ==\" + JSON.stringify(result[0][1].name));\n      return result;\n    });\n    return x;\n  };\n\n  const getLogin = async () => {\n    const x = await fetch(\"http://localhost:3002/cartusers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      //setGridList(result);\n      return result;\n    });\n    return x;\n  };\n\n  const putpw = async (i, e) => {\n    let x = await fetch(\"http://localhost:3002/cartusers/\" + i, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(async response => {\n      let q = { ...response,\n        pw: e\n      };\n      await fetch(\"http://localhost:3002/cartusers/\" + i, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application.json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(q)\n      });\n      return response.json();\n    });\n    return x;\n  };\n\n  const setholder = async () => {\n    try {\n      let x = await getProducts();\n      setGridList(await getProducts());\n    } catch (error) {\n      console.log(\"submitbutton cant find functions??? - \" + error);\n    }\n  };\n\n  const signupholder = async () => {\n    try {\n      let x = await getLogin();\n      let y = 0;\n\n      for (let i in Object.keys(x)) {\n        if (x[i].email == inputValue.email) {\n          setEmailErr(\"alreadyexists\");\n          localErr = true;\n        }\n\n        if (Object.keys(x[i]).length > 1) {\n          y++;\n        }\n      }\n\n      if (localErr == false) {\n        let q = { ...inputValue,\n          cartpredest: [],\n          cartcnum: []\n        };\n        console.log(\"tab 2 clicked\");\n        putuser(y, q);\n      }\n    } catch (error) {\n      console.log(\"signup error - \" + error);\n    }\n  };\n\n  const plusminner = async () => {\n    // August 26 wipe change #18\n    let x = userName.cartpredest.map((e, i) => {\n      if (e == itemnum) {\n        if (userName.cartcnum[i] > 0) {\n          //console.log(\"sorter plusmin true\");\n          setPlusMin(true);\n        } else {\n          let a = userName.cartpredest.indexOf(itemnum);\n\n          if (a >= 0) {\n            let y = { ...userName\n            }; //August 28 wipe change # 24 b\n\n            y.cartpredest.splice(a, 1);\n            y.cartcnum.splice(a, 1);\n\n            try {\n              userupdateid(userName.email).then(userid => {\n                putuser(userid, y);\n              });\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          } //console.log(\"sorter plusmin false\");\n\n\n          setPlusMin(false);\n        }\n      }\n    });\n    return x;\n  };\n\n  const userupdateid = async e => {\n    try {\n      let x = await getLogin();\n      let y = 0; //console.log(\"iop y - \" + y);\n\n      Object.keys(x).map((g, i) => {\n        /*console.log(\"iop x keys - \" + Object.keys(x));\n        console.log(\"iop i - \" + i);\n        console.log(\"iop i[email] - \" + x[i].email);\n        console.log(\"iop e - \" + e);\n        console.log(\"iop x - \" + JSON.stringify(x));*/\n        if (x[i].email !== undefined && x[i].email == e) {\n          y = i;\n          console.log(\"signup nonerror - \" + y);\n        }\n      }); //setErrClassName(\"he\");\n      //console.log(\"iop y - \" + y);\n\n      return y;\n    } catch (error) {\n      // setErrClassName(\"\");\n      console.log(\"signup error - \" + error); //return 7;\n    }\n  };\n\n  const handleid = async e => {\n    let x = await userupdateid(e);\n    return x;\n  };\n  /*const handleUserNamep = (a) => {\n    let x = Object.keys(gridList).map((e, i) => {\n      let d = a.filter((y)=> i + 1 == y)\n      return d[0];\n      });\n    console.log(\"poi c\" + c);\n    x.forEach((e) => {\n      console.log(\"poi x\" + x);\n    });\n    return [2, 2, 2];\n  };*/\n\n  /*const handleUserNamec = (e) => {\n    let a = [];\n    let x = Object.keys(gridList).map((e, i) => {\n      if (gridList[i].cartnum > 0) {\n        a.push(i);\n        return gridList[i].cartnum;\n      }\n    });\n    let y = x.filter((q) => {\n      return q !== undefined;\n    });\n    //console.log(\"poi y\" + y);\n    //console.log(\"poi a\" + a);\n    if (e == \"predest\") {\n      return a;\n    } else if (e == \"cartnum\") {\n      return y;\n    } else return [1, 2, 4];\n  };*/\n\n\n  const unidel = async inputindex => {\n    getLogin().then(roster => {\n      Object.keys(roster).map((e, i) => {\n        try {\n          if (roster[i].cartpredest.indexOf(inputindex) >= 0) {\n            console.log(\"unidel\" + JSON.stringify(roster[i]));\n            let a = { ...roster[i]\n            };\n            a.cartpredest.splice(a.cartpredest.indexOf(inputindex), 1);\n            a.cartcnum.splice(a.cartpredest.indexOf(inputindex), 1);\n\n            try {\n              putuser(i, a);\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          }\n        } catch (error) {\n          console.log(\"if this isn't just skipping cartusers[Guest] or empty ids youre in trouble\" + error);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    plusminner(); //console.log(\"loopcheck\");\n\n    /*if (gridList[itemnum].cartnum == 0) {\n      let a = Object.assign(gridList);\n      setWtfupdate(wtfupdate + 1);\n      a[itemnum].cartnum++;\n      putposter(itemnum, a[itemnum]);\n    }*/\n  }, [\n  /*gridList[itemnum].cartnum, */\n  gridList]);\n  /*useEffect(() => {\n    // console.log(\"deleteDone\");\n    if (\n      userName.email !== undefined &&\n      userName.email !== \"Guest\" &&\n      handleUserNamec(\"predest\") !== []\n    ) {\n      let q = {\n        email: userName.email,\n        pw: userName.pw,\n        cartpredest: handleUserNamec(\"predest\"),\n        cartcnum: handleUserNamec(\"cartnum\"),\n      };\n      //console.log(\"deleteDone\" + userName.email);\n      console.log(\"signup deleteDone\" + userName.email);\n      userupdateid(userName.email).then((e) => {\n        putuser(e, q);\n        //console.log(\"deleteDone r\");\n      });\n    }\n  }, [deleteDone]);*/\n  //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (tabState == 1) {\n          console.log(\"tab 1sb inputvalue email- \" + inputValue.email);\n          checkLogin(inputValue.email, inputValue.pw);\n        }\n\n        if (tabState == 2) {\n          signupholder();\n        }\n\n        if (tabState == 3) {\n          putpw(userupdateid(inputValue.email), inputValue.pw);\n        }\n\n        if (tabState < 5) {\n          setValiTime(true);\n        } else {\n          try {\n            setValiTime(false);\n          } catch {}\n        }\n\n        if (tabState == 5) {\n          if (!plusMin) {\n            setPreDest(itemnum);\n            /*setCart(+cart + +gridList[itemnum].price);\n            let a = Object.assign(gridList);\n            setPlusMin(true);\n            a[itemnum].cartnum++;\n            setGridList(a);*/\n            //August 26 wipe change #20 a 1/4\n\n            let a = { ...userName\n            }; //August 28 wipe change # 24 c\n\n            a.cartpredest.push(itemnum);\n            a.cartcnum.push(1);\n            console.log(\"setusername a\" + JSON.stringify(a)); //setUserName(a);\n            //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 1/(3+4)\n            //userupdateid(\"lumber@gmail.com\");\n            //\n            //let z = handleid(userName.email);\n\n            let z = handleid(userName.email).then(e => {\n              // console.log(\"iop\" + e);\n              return e;\n            });\n            /*let q = {\n              email: userName.email,\n              pw: userName.pw,\n              //cartpredest: handleUserNamec(\"predest\"), //August 26 wipe change #19a\n              //cartcnum: handleUserNamec(\"cartnum\"),\n              cartpredest: a.cartpredest, //August 28 wipe change # 24 c1\n              cartcnum: a.cartcnum, //August 28 wipe change # 24 c2\n            };*/\n            //console.log(\"putuser\");\n\n            console.log(\"tab 5 clicked\");\n\n            try {\n              userupdateid(userName.email).then(e => {\n                putuser(e, a //August 28 wipe change # 24 c4 i dont need q at all\n                //handleUserNamep(),\n                //handleUserNamec(handleUserNamep())\n                );\n                setPlusMin(true);\n              });\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          }\n        }\n\n        if (tabState == 6) {\n          if (!plusMin) {\n            setPreDest(itemnum);\n            setCart(+cart + +gridList[itemnum].price);\n            /*let a = Object.assign(gridList);\n            setPlusMin(true);\n            a[itemnum].cartnum++;\n            setGridList(a);\n            putposter(itemnum, a[itemnum]); //.then(getProducts());*/\n\n            let a = { ...userName\n            }; //August 28 wipe change # 24 d\n\n            a.cartpredest.push(itemnum);\n            a.cartcnum.push(1); //setUserName(a);\n            //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 2/(3+4)\n\n            /*let q = {\n              email: userName.email,\n              pw: userName.pw,\n              cartpredest: a.cartpredest, //August 28 wipe change # 24 d2\n              cartcnum: a.cartcnum, //August 28 wipe change # 24 d3\n            };*/\n\n            try {\n              userupdateid(userName.email).then(e => {\n                putuser(e, a);\n              });\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          }\n        }\n\n        if (tabState == 7) {\n          console.log(\"preDest as of here is\");\n          console.log({\n            preDest\n          });\n          console.log(\"adder\");\n          let y = 1;\n          console.log(\"adder keys length\" + Object.keys(gridList[y]).length);\n\n          while (Object.keys(gridList[y]).length > 1) {\n            console.log(\"adder keys length\" + Object.keys(gridList[y]).length);\n            console.log(\"adder y\" + y);\n            y++;\n          } //y--;\n          //let z = gridList.slice(1, y);\n\n\n          if (preDest == 0) {\n            let x = Object.keys(gridList).length;\n            console.log(\"the index here of y is \" + y);\n            /*setGridList({\n              ...gridList,\n              [y]: phList,\n            });*/\n\n            console.log(\"calculated y aka i is\" + y);\n            putposter(y, { ...phList,\n              idnum: gridList[0].highest\n            }); //.then(getProducts());\n\n            let highestincr = { ...gridList[0]\n            };\n            highestincr.highest++;\n            putposter(0, highestincr);\n          } else {\n            putposter(itemnum, phList); //.then(getProducts());\n          } //setholder();\n\n\n          y = 0;\n        }\n\n        if (tabState == 8) {\n          let y = 0;\n\n          for (let i in Object.keys(gridList).slice(1)) {\n            y++;\n\n            if (Object.keys(gridList[i]).length == 1) {\n              break;\n            }\n          }\n\n          setPreDest(y);\n        }\n\n        try {\n          setTabState(tabState < 4 && !apiValid ? movebehavior(0) : movebehavior(tabState));\n        } catch {}\n      },\n      className: btD2(tabState),\n      children: (tabState == 5 || tabState == 6) && plusMin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minus\",\n          onClick: () => {\n            /*\n            let a = Object.assign(gridList);\n            setWtfupdate(wtfupdate - 1);\n            if (a[itemnum].cartnum == 1) {\n              setPlusMin(false);\n              setWtfupdate(0);\n            }\n            a[itemnum].cartnum--;\n            setGridList(a);*/\n            //August 26 wipe change #20 b 2/4\n            let a = { ...userName\n            }; //August 28 wipe change # 24 e1\n\n            a.cartpredest.map((e, i) => {\n              if (e == itemnum) {\n                a.cartcnum[i]--;\n\n                if (a.cartcnum[i] == 0) {\n                  let b = a.cartpredest.indexOf(itemnum);\n\n                  if (b >= 0) {\n                    a.cartpredest.splice(b, 1); //August 28 wipe change # 24 e2 - copy from plusminner had y assign a new obj. replaced instances of 'y' with already spread copied 'a'\n\n                    a.cartcnum.splice(b, 1);\n\n                    try {\n                      userupdateid(a.email).then(userid => {\n                        putuser(userid, a);\n                      });\n                    } catch (error) {\n                      console.log(\"putuser :\" + error);\n                    }\n                  }\n\n                  setPlusMin(false);\n                }\n              }\n            }); //setUserName(a);\n            //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 6/(3+4)\n\n            let q = {\n              email: userName.email,\n              pw: userName.pw,\n              cartpredest: a.cartpredest,\n              cartcnum: a.cartcnum\n            };\n            console.log(\"tab 5- clicked\");\n\n            try {\n              userupdateid(userName.email).then(e => {\n                putuser(e, q);\n              });\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: userName.cartcnum[userName.cartpredest.indexOf(itemnum)] !== undefined ? userName.cartcnum[userName.cartpredest.indexOf(itemnum)] : setPlusMin(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"plus\",\n          onClick: () => {\n            let a = { ...userName\n            }; //August 28 wipe change # 24 g\n\n            a.cartpredest.map((e, i) => {\n              if (e == itemnum) {\n                a.cartcnum[i]++;\n              }\n            }); //setUserName(a);\n            //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 7/(3+4)\n\n            /*let q = {\n              email: userName.email,\n              pw: userName.pw,\n              cartpredest: a.cartpredest, //August 28 wipe change # 24 g2\n              cartcnum: a.cartcnum, //August 28 wipe change # 24 g3\n            };*/\n\n            console.log(\"tab 5+ clicked\");\n\n            try {\n              userupdateid(userName.email).then(e => {\n                putuser(e, a);\n              });\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: buttonDirector(tabState)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: (tabState == 5 || tabState == 6) && apiValid ? \"griditem2\" : \"nobutton\",\n      onClick: () => {\n        try {\n          setTabState(7);\n        } catch {}\n\n        if (tabState == 5) {\n          setPreDest(itemnum);\n        }\n\n        {\n          /*if (tabState == 7) {\n          setGridList({ ...gridList, [itemnum]: phList });\n          }*/\n        }\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: tabState >= 5 && tabState <= 7 && apiValid ? \"deletebutton\" : \"nobutton\",\n      onClick: () => {\n        console.log(\"sortrefresh sortList\" + JSON.stringify(sortList));\n\n        if (tabState == 5 || tabState == 6) {\n          let a = {\n            id: itemnum\n          };\n          putposter(itemnum, a);\n          let sortrefresh = sortList.slice(0);\n          console.log(\"sortrefresh\" + sortrefresh);\n          console.log(\"sortrefresh spliceindex\" + sortList.indexOf(itemnum));\n          sortrefresh.splice(sortList.indexOf(itemnum), 1);\n          console.log(\"sortrefresh\" + sortrefresh);\n          setSortList(sortrefresh);\n\n          if (sortrefresh.length == 0) {\n            setPageNum(pageNum - 6);\n            setChosenOne(chosenOne - 1);\n          }\n          /*let q = { ...userName }; //August 28 wipe change # 24 f\n          q.cartpredest.splice(q.cartpredest.indexOf(itemnum), 1);\n          q.cartcnum.splice(q.cartpredest.indexOf(itemnum), 1);\n          userupdateid(userName.email).then((e) => {\n            putuser(e, q);\n          });*/\n\n\n          unidel(itemnum); //August 28 wipe change #26 a\n        }\n\n        if (tabState == 7 || tabState == 6) {\n          setTabState(8);\n        }\n\n        if (tabState == 7 && preDest !== 0) {\n          //let a = { id: preDest };\n          //let a = preDest;\n          let a = {\n            id: preDest\n          };\n          putposter(preDest, a);\n          let sortrefresh = sortList.slice(0).splice(sortList.indexOf(preDest), 1);\n          console.log(\"sortrefresh\" + sortrefresh);\n          setSortList(sortrefresh);\n\n          if (sortrefresh.length == 0) {\n            setPageNum(pageNum - 6);\n            setChosenOne(chosenOne - 1);\n          }\n          /* let q = { ...userName };\n          q.cartpredest.splice(q.cartpredest.indexOf(preDest), 1);\n          q.cartcnum.splice(q.cartpredest.indexOf(preDest), 1);\n          userupdateid(userName.email).then((e) => {\n            putuser(e, q);\n          });*/\n\n\n          unidel(preDest); //August 28 wipe change #26 b\n          //}fesfsfasfasf\n\n          /* Object.keys(gridList)\n            .slice(preDest, Object.keys(gridList).length - 1)\n            .map((e, i) => {\n              if (Object.keys(gridList[i + preDest + 1]).length > 1) {\n                putposter(i + preDest + 1, { id: i + preDest + 1 });\n                putposter(\n                  i + preDest,\n                  gridList[i + preDest + 1]\n                ); /*.then((e) =>\n                  setDeleteDone(!deleteDone)\n                );*/\n          //   }\n          //  });\n        } else if (tabState == 7 && preDest == 0) {\n          setTabState(8);\n        }\n      },\n      children: \"DLT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SubmitButton, \"8kBIdV8I4pQoBvOM5+UFgQc9+hI=\");\n\n_c = SubmitButton;\nexport default SubmitButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","useState","useEffect","SubmitButton","tabState","setTabState","setValiTime","listkey","setGridList","phList","gridList","itemnum","setPreDest","preDest","putuser","validator","cart","setCart","putposter","apiValid","checkLogin","inputValue","setInputValue","putStatus","carTotal","setCarTotal","userName","setUserName","sortList","setSortList","setPageNum","pageNum","chosenOne","setChosenOne","setEmailErr","plusMin","setPlusMin","wtfupdate","setWtfupdate","localErr","buttonDirector","e","btD2","movebehavior","numfix","getProducts","x","fetch","method","headers","then","res","json","result","getLogin","putpw","i","response","q","pw","Accept","body","JSON","stringify","setholder","error","console","log","signupholder","y","Object","keys","email","length","cartpredest","cartcnum","plusminner","map","a","indexOf","splice","userupdateid","userid","g","undefined","handleid","unidel","inputindex","roster","push","z","price","idnum","highest","highestincr","slice","b","id","sortrefresh"],"sources":["/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/login/modalcontent/submitbutton/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport Login from \"../..\";\nimport Home from \"../../..\";\n\nconst SubmitButton = ({\n  tabState,\n  setTabState,\n  setValiTime,\n  listkey,\n  setGridList,\n  phList,\n  gridList,\n  itemnum,\n  setPreDest,\n  preDest,\n  putuser,\n  validator,\n  cart,\n  setCart,\n  putposter,\n  apiValid,\n  checkLogin,\n  inputValue,\n  setInputValue,\n  putStatus,\n  carTotal,\n  setCarTotal,\n  userName,\n  setUserName,\n  sortList,\n  setSortList,\n  setPageNum,\n  pageNum,\n  chosenOne,\n  setChosenOne,\n  setEmailErr,\n}) => {\n  //const [apiValid, setApiValid] = useState(false);\n  const [plusMin, setPlusMin] = useState(true);\n  //const [localErr, setLocalErr] = useState(false);\n  const [wtfupdate, setWtfupdate] = useState(0);\n  //const [deleteDone, setDeleteDone] = useState(true);\n  let localErr = false;\n\n  const buttonDirector = (e) => {\n    switch (e) {\n      case 1:\n        return \"Sign In\";\n      case 2:\n        return \"Create Account\";\n      case 3:\n        return \"Update Password\";\n      case 5:\n        return \"Add\";\n      case 6:\n        return \"Add to Cart\";\n      case 7:\n        return \"Save Product\";\n      case 8:\n        return \"Grid\";\n    }\n  };\n\n  const btD2 = (e) => {\n    if (e < 4) {\n      return \"purplebutton\";\n    } else if (e == 5) {\n      return \"griditem\";\n    } else if (e == 6) {\n      return \"purplebuttonleft\";\n    } else if (e == 7 || e == 8) {\n      return \"purplebutton\";\n    } else {\n      return \"nobutton\";\n    }\n  };\n\n  const movebehavior = (e) => {\n    switch (e) {\n      case 1:\n        return 8;\n      case 2:\n        if (localErr == true) {\n          return 2;\n        } else {\n          return 1;\n        }\n      case 3:\n        return 4;\n      case 5:\n        return 8;\n      case 6:\n        return 8;\n      case 7:\n        return 8;\n      case 8:\n        return 7;\n      default:\n        return 1;\n    }\n  };\n\n  const numfix = (e) => {\n    return e;\n  };\n\n  const getProducts = async () => {\n    const x = await fetch(\"http://localhost:3002/gridList\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //console.log(\"result ==\" + JSON.stringify(result[0][1].name));\n        return result;\n      });\n    return x;\n  };\n\n  const getLogin = async () => {\n    const x = await fetch(\"http://localhost:3002/cartusers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //setGridList(result);\n        return result;\n      });\n    return x;\n  };\n\n  const putpw = async (i, e) => {\n    let x = await fetch(\"http://localhost:3002/cartusers/\" + i, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(async (response) => {\n        let q = { ...response, pw: e };\n        await fetch(\"http://localhost:3002/cartusers/\" + i, {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application.json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(q),\n        });\n        return response.json();\n      });\n    return x;\n  };\n\n  const setholder = async () => {\n    try {\n      let x = await getProducts();\n      setGridList(await getProducts());\n    } catch (error) {\n      console.log(\"submitbutton cant find functions??? - \" + error);\n    }\n  };\n\n  const signupholder = async () => {\n    try {\n      let x = await getLogin();\n      let y = 0;\n      for (let i in Object.keys(x)) {\n        if (x[i].email == inputValue.email) {\n          setEmailErr(\"alreadyexists\");\n          localErr = true;\n        }\n        if (Object.keys(x[i]).length > 1) {\n          y++;\n        }\n      }\n      if (localErr == false) {\n        let q = { ...inputValue, cartpredest: [], cartcnum: [] };\n        console.log(\"tab 2 clicked\");\n        putuser(y, q);\n      }\n    } catch (error) {\n      console.log(\"signup error - \" + error);\n    }\n  };\n\n  const plusminner = async () => {\n    // August 26 wipe change #18\n    let x = userName.cartpredest.map((e, i) => {\n      if (e == itemnum) {\n        if (userName.cartcnum[i] > 0) {\n          //console.log(\"sorter plusmin true\");\n          setPlusMin(true);\n        } else {\n          let a = userName.cartpredest.indexOf(itemnum);\n          if (a >= 0) {\n            let y = { ...userName }; //August 28 wipe change # 24 b\n            y.cartpredest.splice(a, 1);\n            y.cartcnum.splice(a, 1);\n            try {\n              userupdateid(userName.email).then((userid) => {\n                putuser(userid, y);\n              });\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          }\n          //console.log(\"sorter plusmin false\");\n          setPlusMin(false);\n        }\n      }\n    });\n    return x;\n  };\n\n  const userupdateid = async (e) => {\n    try {\n      let x = await getLogin();\n      let y = 0;\n      //console.log(\"iop y - \" + y);\n      Object.keys(x).map((g, i) => {\n        /*console.log(\"iop x keys - \" + Object.keys(x));\n        console.log(\"iop i - \" + i);\n        console.log(\"iop i[email] - \" + x[i].email);\n        console.log(\"iop e - \" + e);\n        console.log(\"iop x - \" + JSON.stringify(x));*/\n        if (x[i].email !== undefined && x[i].email == e) {\n          y = i;\n          console.log(\"signup nonerror - \" + y);\n        }\n      });\n      //setErrClassName(\"he\");\n      //console.log(\"iop y - \" + y);\n      return y;\n    } catch (error) {\n      // setErrClassName(\"\");\n      console.log(\"signup error - \" + error);\n      //return 7;\n    }\n  };\n\n  const handleid = async (e) => {\n    let x = await userupdateid(e);\n    return x;\n  };\n\n  /*const handleUserNamep = (a) => {\n    let x = Object.keys(gridList).map((e, i) => {\n      let d = a.filter((y)=> i + 1 == y)\n      return d[0];\n      });\n    console.log(\"poi c\" + c);\n    x.forEach((e) => {\n      console.log(\"poi x\" + x);\n    });\n    return [2, 2, 2];\n  };*/\n\n  /*const handleUserNamec = (e) => {\n    let a = [];\n    let x = Object.keys(gridList).map((e, i) => {\n      if (gridList[i].cartnum > 0) {\n        a.push(i);\n        return gridList[i].cartnum;\n      }\n    });\n    let y = x.filter((q) => {\n      return q !== undefined;\n    });\n    //console.log(\"poi y\" + y);\n    //console.log(\"poi a\" + a);\n    if (e == \"predest\") {\n      return a;\n    } else if (e == \"cartnum\") {\n      return y;\n    } else return [1, 2, 4];\n  };*/\n\n  const unidel = async (inputindex) => {\n    getLogin().then((roster) => {\n      Object.keys(roster).map((e, i) => {\n        try {\n          if (roster[i].cartpredest.indexOf(inputindex) >= 0) {\n            console.log(\"unidel\" + JSON.stringify(roster[i]));\n            let a = { ...roster[i] };\n            a.cartpredest.splice(a.cartpredest.indexOf(inputindex), 1);\n            a.cartcnum.splice(a.cartpredest.indexOf(inputindex), 1);\n            try {\n              putuser(i, a);\n            } catch (error) {\n              console.log(\"putuser :\" + error);\n            }\n          }\n        } catch (error) {\n          console.log(\n            \"if this isn't just skipping cartusers[Guest] or empty ids youre in trouble\" +\n              error\n          );\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    plusminner();\n    //console.log(\"loopcheck\");\n    /*if (gridList[itemnum].cartnum == 0) {\n      let a = Object.assign(gridList);\n      setWtfupdate(wtfupdate + 1);\n      a[itemnum].cartnum++;\n      putposter(itemnum, a[itemnum]);\n    }*/\n  }, [/*gridList[itemnum].cartnum, */ gridList]);\n\n  /*useEffect(() => {\n    // console.log(\"deleteDone\");\n    if (\n      userName.email !== undefined &&\n      userName.email !== \"Guest\" &&\n      handleUserNamec(\"predest\") !== []\n    ) {\n      let q = {\n        email: userName.email,\n        pw: userName.pw,\n        cartpredest: handleUserNamec(\"predest\"),\n        cartcnum: handleUserNamec(\"cartnum\"),\n      };\n      //console.log(\"deleteDone\" + userName.email);\n      console.log(\"signup deleteDone\" + userName.email);\n      userupdateid(userName.email).then((e) => {\n        putuser(e, q);\n        //console.log(\"deleteDone r\");\n      });\n    }\n  }, [deleteDone]);*/ //\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          if (tabState == 1) {\n            console.log(\"tab 1sb inputvalue email- \" + inputValue.email);\n            checkLogin(inputValue.email, inputValue.pw);\n          }\n          if (tabState == 2) {\n            signupholder();\n          }\n          if (tabState == 3) {\n            putpw(userupdateid(inputValue.email), inputValue.pw);\n          }\n          if (tabState < 5) {\n            setValiTime(true);\n          } else {\n            try {\n              setValiTime(false);\n            } catch {}\n          }\n          if (tabState == 5) {\n            if (!plusMin) {\n              setPreDest(itemnum);\n              /*setCart(+cart + +gridList[itemnum].price);\n              let a = Object.assign(gridList);\n              setPlusMin(true);\n              a[itemnum].cartnum++;\n              setGridList(a);*/\n              //August 26 wipe change #20 a 1/4\n              let a = { ...userName }; //August 28 wipe change # 24 c\n              a.cartpredest.push(itemnum);\n              a.cartcnum.push(1);\n              console.log(\"setusername a\" + JSON.stringify(a));\n              //setUserName(a);\n              //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 1/(3+4)\n              //userupdateid(\"lumber@gmail.com\");\n              //\n              //let z = handleid(userName.email);\n              let z = handleid(userName.email).then((e) => {\n                // console.log(\"iop\" + e);\n                return e;\n              });\n              /*let q = {\n                email: userName.email,\n                pw: userName.pw,\n                //cartpredest: handleUserNamec(\"predest\"), //August 26 wipe change #19a\n                //cartcnum: handleUserNamec(\"cartnum\"),\n                cartpredest: a.cartpredest, //August 28 wipe change # 24 c1\n                cartcnum: a.cartcnum, //August 28 wipe change # 24 c2\n              };*/\n              //console.log(\"putuser\");\n              console.log(\"tab 5 clicked\");\n              try {\n                userupdateid(userName.email).then((e) => {\n                  putuser(\n                    e,\n                    a //August 28 wipe change # 24 c4 i dont need q at all\n                    //handleUserNamep(),\n                    //handleUserNamec(handleUserNamep())\n                  );\n                  setPlusMin(true);\n                });\n              } catch (error) {\n                console.log(\"putuser :\" + error);\n              }\n            }\n          }\n          if (tabState == 6) {\n            if (!plusMin) {\n              setPreDest(itemnum);\n              setCart(+cart + +gridList[itemnum].price);\n              /*let a = Object.assign(gridList);\n              setPlusMin(true);\n              a[itemnum].cartnum++;\n              setGridList(a);\n              putposter(itemnum, a[itemnum]); //.then(getProducts());*/\n              let a = { ...userName }; //August 28 wipe change # 24 d\n              a.cartpredest.push(itemnum);\n              a.cartcnum.push(1);\n              //setUserName(a);\n              //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 2/(3+4)\n              /*let q = {\n                email: userName.email,\n                pw: userName.pw,\n                cartpredest: a.cartpredest, //August 28 wipe change # 24 d2\n                cartcnum: a.cartcnum, //August 28 wipe change # 24 d3\n              };*/\n              try {\n                userupdateid(userName.email).then((e) => {\n                  putuser(e, a);\n                });\n              } catch (error) {\n                console.log(\"putuser :\" + error);\n              }\n            }\n          }\n          if (tabState == 7) {\n            console.log(\"preDest as of here is\");\n            console.log({ preDest });\n            console.log(\"adder\");\n            let y = 1;\n            console.log(\"adder keys length\" + Object.keys(gridList[y]).length);\n            while (Object.keys(gridList[y]).length > 1) {\n              console.log(\n                \"adder keys length\" + Object.keys(gridList[y]).length\n              );\n              console.log(\"adder y\" + y);\n              y++;\n            }\n            //y--;\n            //let z = gridList.slice(1, y);\n            if (preDest == 0) {\n              let x = Object.keys(gridList).length;\n              console.log(\"the index here of y is \" + y);\n              /*setGridList({\n                ...gridList,\n                [y]: phList,\n              });*/\n              console.log(\"calculated y aka i is\" + y);\n              putposter(y, { ...phList, idnum: gridList[0].highest }); //.then(getProducts());\n              let highestincr = { ...gridList[0] };\n              highestincr.highest++;\n              putposter(0, highestincr);\n            } else {\n              putposter(itemnum, phList); //.then(getProducts());\n            }\n            //setholder();\n            y = 0;\n          }\n          if (tabState == 8) {\n            let y = 0;\n            for (let i in Object.keys(gridList).slice(1)) {\n              y++;\n              if (Object.keys(gridList[i]).length == 1) {\n                break;\n              }\n            }\n            setPreDest(y);\n          }\n          try {\n            setTabState(\n              tabState < 4 && !apiValid\n                ? movebehavior(0)\n                : movebehavior(tabState)\n            );\n          } catch {}\n        }}\n        className={btD2(tabState)}\n      >\n        {(tabState == 5 || tabState == 6) && plusMin ? (\n          <>\n            <span\n              className=\"minus\"\n              onClick={() => {\n                /*\n                let a = Object.assign(gridList);\n                setWtfupdate(wtfupdate - 1);\n                if (a[itemnum].cartnum == 1) {\n                  setPlusMin(false);\n                  setWtfupdate(0);\n                }\n                a[itemnum].cartnum--;\n                setGridList(a);*/\n                //August 26 wipe change #20 b 2/4\n                let a = { ...userName }; //August 28 wipe change # 24 e1\n                a.cartpredest.map((e, i) => {\n                  if (e == itemnum) {\n                    a.cartcnum[i]--;\n                    if (a.cartcnum[i] == 0) {\n                      let b = a.cartpredest.indexOf(itemnum);\n                      if (b >= 0) {\n                        a.cartpredest.splice(b, 1); //August 28 wipe change # 24 e2 - copy from plusminner had y assign a new obj. replaced instances of 'y' with already spread copied 'a'\n                        a.cartcnum.splice(b, 1);\n                        try {\n                          userupdateid(a.email).then((userid) => {\n                            putuser(userid, a);\n                          });\n                        } catch (error) {\n                          console.log(\"putuser :\" + error);\n                        }\n                      }\n                      setPlusMin(false);\n                    }\n                  }\n                });\n                //setUserName(a);\n                //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 6/(3+4)\n                let q = {\n                  email: userName.email,\n                  pw: userName.pw,\n                  cartpredest: a.cartpredest,\n                  cartcnum: a.cartcnum,\n                };\n                console.log(\"tab 5- clicked\");\n                try {\n                  userupdateid(userName.email).then((e) => {\n                    putuser(e, q);\n                  });\n                } catch (error) {\n                  console.log(\"putuser :\" + error);\n                }\n              }}\n            >\n              -\n            </span>\n            <a>\n              {/*console.log(\n                \"sorter 5sb cartnum\" +\n                  userName.cartcnum[userName.cartpredest.indexOf(itemnum)]\n              )}\n              {console.log(\"sorter 5sb itemnum\" + itemnum)}\n              {console.log(\"sorter 5sb usernamecartcnum\" + userName.cartcnum)}\n              {console.log(\n                \"sorter 5sb usernamecartpredest\" + userName.cartpredest\n              )*/}\n              {userName.cartcnum[userName.cartpredest.indexOf(itemnum)] !==\n              undefined\n                ? userName.cartcnum[userName.cartpredest.indexOf(itemnum)]\n                : setPlusMin(false)}\n\n              {/* userName.cartpredest.map((e, i) => {\n                if (e == itemnum) {\n                  return userName.cartcnum[i];\n                } else if (i == userName.cartpredest.length - 1) {\n                  setPlusMin(false);\n                }\n              })}*/}\n            </a>\n            <span\n              className=\"plus\"\n              onClick={() => {\n                let a = { ...userName }; //August 28 wipe change # 24 g\n                a.cartpredest.map((e, i) => {\n                  if (e == itemnum) {\n                    a.cartcnum[i]++;\n                  }\n                });\n                //setUserName(a);\n                //putposter(itemnum, a[itemnum]); //.then(getProducts()); //August 26 wipe change #10 7/(3+4)\n                /*let q = {\n                  email: userName.email,\n                  pw: userName.pw,\n                  cartpredest: a.cartpredest, //August 28 wipe change # 24 g2\n                  cartcnum: a.cartcnum, //August 28 wipe change # 24 g3\n                };*/\n                console.log(\"tab 5+ clicked\");\n                try {\n                  userupdateid(userName.email).then((e) => {\n                    putuser(e, a);\n                  });\n                } catch (error) {\n                  console.log(\"putuser :\" + error);\n                }\n              }}\n            >\n              +\n            </span>\n          </>\n        ) : (\n          <>{buttonDirector(tabState)}</>\n        )}\n      </button>\n      {\"   \"}\n      <button\n        className={\n          (tabState == 5 || tabState == 6) && apiValid\n            ? \"griditem2\"\n            : \"nobutton\"\n        }\n        onClick={() => {\n          try {\n            setTabState(7);\n          } catch {}\n          if (tabState == 5) {\n            setPreDest(itemnum);\n          }\n          {\n            /*if (tabState == 7) {\n            setGridList({ ...gridList, [itemnum]: phList });\n          }*/\n          }\n        }}\n      >\n        Edit\n      </button>\n      <button\n        className={\n          tabState >= 5 && tabState <= 7 && apiValid\n            ? \"deletebutton\"\n            : \"nobutton\"\n        }\n        onClick={() => {\n          console.log(\"sortrefresh sortList\" + JSON.stringify(sortList));\n          if (tabState == 5 || tabState == 6) {\n            let a = { id: itemnum };\n            putposter(itemnum, a);\n            let sortrefresh = sortList.slice(0);\n            console.log(\"sortrefresh\" + sortrefresh);\n            console.log(\"sortrefresh spliceindex\" + sortList.indexOf(itemnum));\n            sortrefresh.splice(sortList.indexOf(itemnum), 1);\n            console.log(\"sortrefresh\" + sortrefresh);\n            setSortList(sortrefresh);\n            if (sortrefresh.length == 0) {\n              setPageNum(pageNum - 6);\n              setChosenOne(chosenOne - 1);\n            }\n            /*let q = { ...userName }; //August 28 wipe change # 24 f\n            q.cartpredest.splice(q.cartpredest.indexOf(itemnum), 1);\n            q.cartcnum.splice(q.cartpredest.indexOf(itemnum), 1);\n            userupdateid(userName.email).then((e) => {\n              putuser(e, q);\n            });*/\n            unidel(itemnum); //August 28 wipe change #26 a\n          }\n          if (tabState == 7 || tabState == 6) {\n            setTabState(8);\n          }\n          if (tabState == 7 && preDest !== 0) {\n            //let a = { id: preDest };\n            //let a = preDest;\n            let a = { id: preDest };\n            putposter(preDest, a);\n            let sortrefresh = sortList\n              .slice(0)\n              .splice(sortList.indexOf(preDest), 1);\n            console.log(\"sortrefresh\" + sortrefresh);\n            setSortList(sortrefresh);\n            if (sortrefresh.length == 0) {\n              setPageNum(pageNum - 6);\n              setChosenOne(chosenOne - 1);\n            }\n\n            /* let q = { ...userName };\n            q.cartpredest.splice(q.cartpredest.indexOf(preDest), 1);\n            q.cartcnum.splice(q.cartpredest.indexOf(preDest), 1);\n            userupdateid(userName.email).then((e) => {\n              putuser(e, q);\n            });*/\n            unidel(preDest); //August 28 wipe change #26 b\n            //}fesfsfasfasf\n            /* Object.keys(gridList)\n              .slice(preDest, Object.keys(gridList).length - 1)\n              .map((e, i) => {\n                if (Object.keys(gridList[i + preDest + 1]).length > 1) {\n                  putposter(i + preDest + 1, { id: i + preDest + 1 });\n                  putposter(\n                    i + preDest,\n                    gridList[i + preDest + 1]\n                  ); /*.then((e) =>\n                    setDeleteDone(!deleteDone)\n                  );*/\n            //   }\n            //  });\n          } else if (tabState == 7 && preDest == 0) {\n            setTabState(8);\n          }\n        }}\n      >\n        DLT\n      </button>\n      {/*<p>itemnum:{itemnum}</p>*/}\n    </>\n  );\n};\n\nexport default SubmitButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}