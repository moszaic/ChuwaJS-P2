{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport Login from \"./login\";\nimport CartModal from \"./cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //npx json-server --port 3001 --watch db.json\n  const [visible, setVisible] = useState(true);\n  const [tabState, setTabState] = useState(8);\n  const [cart, setCart] = useState(0);\n  const [carTotal, setCarTotal] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [apiValid, setApiValid] = useState(true);\n  const [valiTime, setValiTime] = useState(false);\n  const [apidone, setApiDone] = useState(false);\n  const [postApi, setPostApi] = useState(false);\n  const [inputValue, setInputValue] = useState({\n    email: \"\",\n    pw: \"\"\n  });\n  const [userName, setUserName] = useState({\n    he: \"wgui\"\n  });\n  const [preDest, setPreDest] = useState(0);\n  const [emailErr, setEmailErr] = useState(\"\");\n  const [pageNum, setPageNum] = useState(1);\n  const [gridList, setGridList] = useState({\n    /*\n    0: {\n      name: \"\",\n      desc: \"\",\n      category: \"\",\n      price: 0,\n      quantity: 0,\n      img: \"\",\n    },\n    1: {\n      name: \"obj number 1\",\n      desc: \"obj 1\",\n      category: \"obj 1\",\n      price: 987,\n      quantity: 654,\n      img: \"https://cdn.onepiecechapters.com/file/CDN-M-A-N/onepiecetcb_1056_014.png\",\n    },\n    2: {\n      name: \"obj number 2\",\n      desc: \"wow\",\n      category: \"jorts\",\n      price: 10,\n      quantity: 20,\n      img: \"https://cdn.onepiecechapters.com/file/CDN-M-A-N/onepiecetcb_1056_003.png\",\n    },*/\n    // 0: \"test\",\n    //1: \"default gridlist values\",\n    0: \"\",\n    1: \"\",\n    2: \"\",\n    3: \"\"\n  });\n\n  const getProducts = async () => {\n    const x = await fetch(\"http://localhost:3002/gridList\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      /*userName[\"cartpredest\"].map((e) => {\n        let a = Object.keys(result).filter((i) => e == i);\n        if (a[0] !== undefined) {\n          console.log(\"a[0] - \" + a[0]);\n          console.log(\"a[0] usernamecpd - \" + userName[\"cartpredest\"]);\n          let x = { ...result[e], cartnum: userName[\"cartpredest\"][e] };\n          putposter(e, x);\n        }\n      });*/\n      setGridList(result);\n      return result;\n    });\n    return x;\n  };\n\n  const putposter = async (i, e) => {\n    let x = 0;\n    let y = await fetch(\"http://localhost:3002/gridList/\" + i, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(e)\n    }).then(response => {\n      if (response.ok) {\n        ////console.log(\"ecartnum\" + e.cartnum);\n        //getProducts();\n        setPostApi(true);\n        getProducts(); //setCarTotal((carTotal += x));\n\n        return response.json();\n      }\n    });\n    return y;\n  }; //login check True/False api\n\n\n  const putStatus = async e => {\n    await fetch(\"http://localhost:3002/logged\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(e)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n  };\n\n  const getStatus = async () => {\n    const x = await fetch(\"http://localhost:3002/logged\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      return result;\n    });\n    return x;\n  };\n\n  const getUser = async () => {\n    const x = await fetch(\"http://localhost:3002/activeuser\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      setUserName(result); //result[\"cartpredest\"].map((e)=>{\n\n      getProducts().then(productsresult => {\n        console.log(\"tab getUser\" + JSON.stringify(result));\n        console.log(\"tab result email\" + result.email);\n\n        if (result.email !== \"Guest\") {\n          //console.log(\"result.email\" + result.email);\n          console.log(\"tab result cartpredest outer\" + result.cartpredest);\n\n          if (result[\"cartpredest\"] !== undefined) {\n            /*Object.keys(productsresult).map((e, i) => {\n            let a = Object.assign(productsresult[i]);\n            a.cartnum = 0;\n            putposter(i, a);\n            });*/\n            console.log(\"tab result cartpredest inner\" + result.cartpredest);\n            result[\"cartpredest\"].map((e, j) => {\n              let a = Object.keys(productsresult).slice(1).filter(i => {\n                return e == i;\n              });\n\n              if (a[0] !== undefined) {\n                let x = { ...productsresult[e],\n                  cartnum: result[\"cartcnum\"][j]\n                }; //console.log(\"a[0] e- \" + e);\n\n                putposter(e, x);\n              }\n            });\n          } else {//console.log(\"cartassignhehe\");\n          }\n        }\n      });\n      getProducts();\n      return result;\n    });\n    return x;\n  };\n\n  const putuser = async (i, e) => {\n    let x = i;\n    /*let y = {\n      email: e.email,\n      pw: e.pw,\n      cartpredest: a,\n      cartcnum: b,\n    };*/\n\n    setUserName(e);\n    await fetch(\"http://localhost:3002/activeuser/\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(e)\n    });\n    await fetch(\"http://localhost:3002/cartusers/\" + i, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(e)\n    }).then(response => {\n      if (response.ok) {\n        setPostApi(true);\n        return response.json();\n      }\n    });\n  };\n\n  const putactiveuser = async e => {\n    console.log(\"activeuser\" + JSON.stringify(e));\n    await fetch(\"http://localhost:3002/activeuser\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(e)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n  };\n\n  const statuscheck = async () => {\n    getStatus().then(e => {\n      setApiValid(e.status == true);\n      setLoggedIn(e.status == true);\n\n      if (e.status == true) {\n        setTabState(8);\n        setVisible(true);\n      }\n\n      return e.status;\n    });\n  };\n\n  const checkLogin = async (a, b) => {\n    let x = await getLogin();\n    let y = false;\n    let z = \"\";\n    console.log(\"excalixer: \" + JSON.stringify(x[0][\"email\"]));\n    await Object.keys(x).map((e, i) => {\n      //console.log(\"excali\" + JSON.stringify(x[1]));\n      if (x[i][\"email\"] == a && x[i][\"pw\"] == b) {\n        y = true;\n        setTabState(8); //should've done this a week n half ago\n        //console.log(\"usernamer\" + x[i]);\n\n        if (a !== userName[\"email\"] || userName[\"email\"] == \"Guest\") {\n          //cartnum resetter\n          //console.log(\"cartnum resetter\" + userName[\"email\"]);\n          Object.keys(gridList).map((e, i) => {\n            if (Object.keys(gridList[i]).length > 1) {\n              let a = { ...gridList[i],\n                cartnum: 0\n              };\n              putposter(i, a);\n            }\n          });\n        } //setUserName(x[i]);\n        //z = x[i][\"email\"];\n\n\n        if (a !== \"Guest\") {\n          let zam = {\n            email: a,\n            pw: b,\n            cartpredest: x[i].cartpredest,\n            cartcnum: x[i].cartcnum\n          };\n          console.log(\"tab ifglitch zam\" + JSON.stringify(zam));\n          console.log(\"tab checlogin db x[i] cartpredest\" + x[i].cartpredest);\n          console.log(\"tab checlogin db x[i] cartcnum\" + x[i].cartcnum);\n          console.log(\"tab checlogin a\" + a);\n          putactiveuser(zam).then(e => {\n            getUser();\n          });\n        }\n      } else {\n        setEmailErr(\"emailerr\");\n        let zam = {\n          email: a,\n          pw: b,\n          cartpredest: x[i].cartpredest,\n          cartcnum: x[i].cartcnum\n        };\n        putactiveuser(zam).then(e => {\n          getUser();\n        });\n      }\n    });\n    /*if (y == false) {\n      putactiveuser({\n        email: \"Guest\",\n        pw: \"\",\n        cartpredest: [],\n        cartcnum: [],\n      }).then((e) => {\n        getUser();\n      });\n    }*/\n\n    setApiValid(y);\n    putStatus({\n      status: y\n    });\n    return z;\n  };\n\n  const getLogin = async () => {\n    const x = await fetch(\"http://localhost:3002/cartusers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      //setGridList(result);\n      return result;\n    });\n    return x;\n  };\n\n  useEffect(() => {\n    getUser().then(e => {\n      //console.log(\"iop\" + e[\"email\"] + e[\"pw\"]);\n      setInputValue({\n        email: e[\"email\"],\n        pw: e[\"pw\"]\n      });\n    });\n    statuscheck(); //setInputValue({ email: userName[\"email\"], pw: userName[\"pw\"] });\n    //handleCarTotal();\n  }, []);\n  useEffect(() => {\n    getProducts();\n  }, [userName]);\n  useEffect(() => {\n    /*if (!apiValid) {\n      setCart(0);\n    } else {\n      handleCart();\n    }*/\n    handleCart(); //handleCarTotal();\n  }, [gridList]);\n  /* useEffect(() => {\n    if (tabState < 5) {\n      getUser().then((e) => {\n        checkLogin(e.email, e.pw);\n      });\n    }\n  }, [inputValue]);\n   useEffect(() => {\n    getUser().then((e) => {\n      checkLogin(e.email, e.pw);\n    });\n  }, []);*/\n\n  useEffect(() => {\n    getProducts().then(z => {\n      Object.keys(z).map((e, i) => {\n        if (Object.keys(z[i]).length > 1) {\n          let a = { ...z[i],\n            cartnum: 0\n          };\n          putposter(i, a);\n        }\n      });\n      return 0;\n    });\n  }, []);\n\n  const resetGridList = async () => {\n    getLogin().then(e => {\n      let a = Object.keys(e).map((q, i) => {\n        if (Object.keys(e[i]).length > 1) {\n          a[i] = { ...e[i],\n            cartnum: 0\n          };\n        }\n      });\n      let y = fetch(\"http://localhost:3002/cartusers\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application.json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(a)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n    });\n  }; //useEffect(() => {}, [userName]);\n\n\n  const getter = async () => {};\n\n  const handleCart = async () => {\n    let q = 0;\n    let b = 0; //console.log(\"asdf\" + JSON.stringify(a));\n\n    Object.keys(gridList).map((e, i) => {\n      //console.log(\"qwer\" + JSON.stringify(gridList[i].cartnum));\n      if (gridList[i].cartnum != undefined && gridList[i].price != undefined) {\n        //console.log(\"cartnum y cartnum\" + gridList[i].cartnum);\n        //console.log(\"cartnum y price \" + gridList[i].price);\n        q = gridList[i].cartnum * +gridList[i].price;\n        b += q; //console.log(\"fdsa\" + gridList[i].cartnum);\n      }\n    }); //console.log(\"fdsa\" + b);\n\n    setCart(b);\n    return b;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headers\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logbutton\",\n        onClick: () => {\n          Object.keys(gridList).map((e, i) => {\n            if (Object.keys(gridList[i]).length > 1) {\n              let a = { ...gridList[i],\n                cartnum: 0\n              };\n              putposter(i, a);\n              console.log(\"tab resetter putposter i\" + i);\n              console.log(\"tab resetter putposter a\" + JSON.stringify(a));\n            } //loggedIn && setLoggedIn(false);\n\n\n            setLoggedIn(!loggedIn); //setVisible(!visible);\n            //let x = apiValid ? \"true\" : \"False\";\n            //console.log(\"apiValidity\" + x);\n\n            let x = {\n              email: \"Guest\",\n              pw: \"\",\n              cartpredest: [],\n              cartcnum: []\n            };\n            console.log(\"tab login button clicked\");\n            putactiveuser(x).then(e => {\n              getUser();\n            });\n\n            if (apiValid == true) {\n              setApiValid(false);\n              setInputValue({\n                email: \"\",\n                pw: \"\"\n              });\n              putStatus({\n                status: \"false\"\n              });\n              setValiTime(false);\n            } else {\n              handleCart();\n            }\n\n            setTabState(1);\n          });\n        },\n        children: apiValid ? \"Logout\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [userName[\"email\"], \"     \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cart\",\n        children: [\"$\", cart, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartModal, {\n        carTotal: carTotal,\n        gridList: gridList,\n        setGridList: setGridList,\n        putposter: putposter,\n        userName: userName,\n        putuser: putuser,\n        setPreDest: setPreDest,\n        setTabState: setTabState,\n        apiValid: apiValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      visible: visible,\n      setVisible: setVisible,\n      tabState: tabState,\n      setTabState: setTabState,\n      cart: cart,\n      setCart: setCart,\n      loggedIn: loggedIn,\n      setLoggedIn: setLoggedIn,\n      apiValid: apiValid,\n      setapiValid: setApiValid,\n      valiTime: valiTime,\n      setValiTime: setValiTime,\n      putStatus: putStatus,\n      carTotal: carTotal,\n      setCarTotal: setCarTotal,\n      setApiDone: setApiDone,\n      gridList: gridList,\n      setGridList: setGridList,\n      getLogin: getLogin,\n      checkLogin: checkLogin,\n      userName: userName,\n      setUserName: setUserName,\n      putuser: putuser,\n      postApi: postApi,\n      setPostApi: setPostApi,\n      inputValue: inputValue,\n      setInputValue: setInputValue,\n      putposter: putposter,\n      getProducts: getProducts,\n      setPreDest: setPreDest,\n      preDest: preDest,\n      pageNum: pageNum,\n      setPageNum: setPageNum,\n      emailErr: emailErr,\n      setEmailErr: setEmailErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"guh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"7BVkrJpvJFzS33DvKGfikwHU4nw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Login","CartModal","Home","visible","setVisible","tabState","setTabState","cart","setCart","carTotal","setCarTotal","loggedIn","setLoggedIn","apiValid","setApiValid","valiTime","setValiTime","apidone","setApiDone","postApi","setPostApi","inputValue","setInputValue","email","pw","userName","setUserName","he","preDest","setPreDest","emailErr","setEmailErr","pageNum","setPageNum","gridList","setGridList","getProducts","x","fetch","method","headers","then","res","json","result","putposter","i","e","y","Accept","body","JSON","stringify","response","ok","putStatus","getStatus","getUser","productsresult","console","log","cartpredest","undefined","map","j","a","Object","keys","slice","filter","cartnum","putuser","putactiveuser","statuscheck","status","checkLogin","b","getLogin","z","length","zam","cartcnum","handleCart","resetGridList","q","getter","price"],"sources":["/Users/stevenfan/Documents/2022/Chuwa/project2ts/src/components/home/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport Login from \"./login\";\nimport Modal from \"../modalsandwicher/modal\";\nimport MyModal from \"../modalsandwicher\";\nimport CartModal from \"./cart\";\n\nfunction Home() {\n  //npx json-server --port 3001 --watch db.json\n  const [visible, setVisible] = useState(true);\n  const [tabState, setTabState] = useState(8);\n  const [cart, setCart] = useState(0);\n  const [carTotal, setCarTotal] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [apiValid, setApiValid] = useState(true);\n  const [valiTime, setValiTime] = useState(false);\n  const [apidone, setApiDone] = useState(false);\n  const [postApi, setPostApi] = useState(false);\n  const [inputValue, setInputValue] = useState({ email: \"\", pw: \"\" });\n  const [userName, setUserName] = useState({ he: \"wgui\" });\n  const [preDest, setPreDest] = useState(0);\n  const [emailErr, setEmailErr] = useState(\"\");\n  const [pageNum, setPageNum] = useState(1);\n  const [gridList, setGridList] = useState({\n    /*\n    0: {\n      name: \"\",\n      desc: \"\",\n      category: \"\",\n      price: 0,\n      quantity: 0,\n      img: \"\",\n    },\n    1: {\n      name: \"obj number 1\",\n      desc: \"obj 1\",\n      category: \"obj 1\",\n      price: 987,\n      quantity: 654,\n      img: \"https://cdn.onepiecechapters.com/file/CDN-M-A-N/onepiecetcb_1056_014.png\",\n    },\n    2: {\n      name: \"obj number 2\",\n      desc: \"wow\",\n      category: \"jorts\",\n      price: 10,\n      quantity: 20,\n      img: \"https://cdn.onepiecechapters.com/file/CDN-M-A-N/onepiecetcb_1056_003.png\",\n    },*/ // 0: \"test\",\n    //1: \"default gridlist values\",\n    0: \"\",\n    1: \"\",\n    2: \"\",\n    3: \"\",\n  });\n\n  const getProducts = async () => {\n    const x = await fetch(\"http://localhost:3002/gridList\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        /*userName[\"cartpredest\"].map((e) => {\n          let a = Object.keys(result).filter((i) => e == i);\n          if (a[0] !== undefined) {\n            console.log(\"a[0] - \" + a[0]);\n            console.log(\"a[0] usernamecpd - \" + userName[\"cartpredest\"]);\n            let x = { ...result[e], cartnum: userName[\"cartpredest\"][e] };\n            putposter(e, x);\n          }\n        });*/\n        setGridList(result);\n        return result;\n      });\n    return x;\n  };\n\n  const putposter = async (i, e) => {\n    let x = 0;\n    let y = await fetch(\"http://localhost:3002/gridList/\" + i, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(e),\n    }).then((response) => {\n      if (response.ok) {\n        ////console.log(\"ecartnum\" + e.cartnum);\n        //getProducts();\n        setPostApi(true);\n        getProducts();\n        //setCarTotal((carTotal += x));\n        return response.json();\n      }\n    });\n    return y;\n  };\n\n  //login check True/False api\n  const putStatus = async (e) => {\n    await fetch(\"http://localhost:3002/logged\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(e),\n    }).then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n  };\n  const getStatus = async () => {\n    const x = await fetch(\"http://localhost:3002/logged\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        return result;\n      });\n    return x;\n  };\n\n  const getUser = async () => {\n    const x = await fetch(\"http://localhost:3002/activeuser\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setUserName(result);\n\n        //result[\"cartpredest\"].map((e)=>{\n        getProducts().then((productsresult) => {\n          console.log(\"tab getUser\" + JSON.stringify(result));\n          console.log(\"tab result email\" + result.email);\n          if (result.email !== \"Guest\") {\n            //console.log(\"result.email\" + result.email);\n            console.log(\"tab result cartpredest outer\" + result.cartpredest);\n            if (result[\"cartpredest\"] !== undefined) {\n              /*Object.keys(productsresult).map((e, i) => {\n              let a = Object.assign(productsresult[i]);\n              a.cartnum = 0;\n              putposter(i, a);\n            });*/\n              console.log(\"tab result cartpredest inner\" + result.cartpredest);\n              result[\"cartpredest\"].map((e, j) => {\n                let a = Object.keys(productsresult)\n                  .slice(1)\n                  .filter((i) => {\n                    return e == i;\n                  });\n                if (a[0] !== undefined) {\n                  let x = {\n                    ...productsresult[e],\n                    cartnum: result[\"cartcnum\"][j],\n                  };\n                  //console.log(\"a[0] e- \" + e);\n                  putposter(e, x);\n                }\n              });\n            } else {\n              //console.log(\"cartassignhehe\");\n            }\n          }\n        });\n        getProducts();\n        return result;\n      });\n    return x;\n  };\n\n  const putuser = async (i, e) => {\n    let x = i;\n    /*let y = {\n      email: e.email,\n      pw: e.pw,\n      cartpredest: a,\n      cartcnum: b,\n    };*/\n    setUserName(e);\n    await fetch(\"http://localhost:3002/activeuser/\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(e),\n    });\n    await fetch(\"http://localhost:3002/cartusers/\" + i, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(e),\n    }).then((response) => {\n      if (response.ok) {\n        setPostApi(true);\n        return response.json();\n      }\n    });\n  };\n\n  const putactiveuser = async (e) => {\n    console.log(\"activeuser\" + JSON.stringify(e));\n    await fetch(\"http://localhost:3002/activeuser\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application.json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(e),\n    }).then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n  };\n\n  const statuscheck = async () => {\n    getStatus().then((e) => {\n      setApiValid(e.status == true);\n      setLoggedIn(e.status == true);\n      if (e.status == true) {\n        setTabState(8);\n        setVisible(true);\n      }\n      return e.status;\n    });\n  };\n\n  const checkLogin = async (a, b) => {\n    let x = await getLogin();\n    let y = false;\n    let z = \"\";\n    console.log(\"excalixer: \" + JSON.stringify(x[0][\"email\"]));\n    await Object.keys(x).map((e, i) => {\n      //console.log(\"excali\" + JSON.stringify(x[1]));\n      if (x[i][\"email\"] == a && x[i][\"pw\"] == b) {\n        y = true;\n        setTabState(8); //should've done this a week n half ago\n        //console.log(\"usernamer\" + x[i]);\n        if (a !== userName[\"email\"] || userName[\"email\"] == \"Guest\") {\n          //cartnum resetter\n          //console.log(\"cartnum resetter\" + userName[\"email\"]);\n          Object.keys(gridList).map((e, i) => {\n            if (Object.keys(gridList[i]).length > 1) {\n              let a = { ...gridList[i], cartnum: 0 };\n              putposter(i, a);\n            }\n          });\n        }\n        //setUserName(x[i]);\n        //z = x[i][\"email\"];\n        if (a !== \"Guest\") {\n          let zam = {\n            email: a,\n            pw: b,\n            cartpredest: x[i].cartpredest,\n            cartcnum: x[i].cartcnum,\n          };\n          console.log(\"tab ifglitch zam\" + JSON.stringify(zam));\n          console.log(\"tab checlogin db x[i] cartpredest\" + x[i].cartpredest);\n          console.log(\"tab checlogin db x[i] cartcnum\" + x[i].cartcnum);\n          console.log(\"tab checlogin a\" + a);\n          putactiveuser(zam).then((e) => {\n            getUser();\n          });\n        }\n      } else {\n        setEmailErr(\"emailerr\");\n        let zam = {\n          email: a,\n          pw: b,\n          cartpredest: x[i].cartpredest,\n          cartcnum: x[i].cartcnum,\n        };\n        putactiveuser(zam).then((e) => {\n          getUser();\n        });\n      }\n    });\n    /*if (y == false) {\n      putactiveuser({\n        email: \"Guest\",\n        pw: \"\",\n        cartpredest: [],\n        cartcnum: [],\n      }).then((e) => {\n        getUser();\n      });\n    }*/\n    setApiValid(y);\n    putStatus({ status: y });\n    return z;\n  };\n\n  const getLogin = async () => {\n    const x = await fetch(\"http://localhost:3002/cartusers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //setGridList(result);\n        return result;\n      });\n    return x;\n  };\n\n  useEffect(() => {\n    getUser().then((e) => {\n      //console.log(\"iop\" + e[\"email\"] + e[\"pw\"]);\n      setInputValue({ email: e[\"email\"], pw: e[\"pw\"] });\n    });\n    statuscheck();\n    //setInputValue({ email: userName[\"email\"], pw: userName[\"pw\"] });\n\n    //handleCarTotal();\n  }, []);\n\n  useEffect(() => {\n    getProducts();\n  }, [userName]);\n\n  useEffect(() => {\n    /*if (!apiValid) {\n      setCart(0);\n    } else {\n      handleCart();\n    }*/\n    handleCart();\n    //handleCarTotal();\n  }, [gridList]);\n\n  /* useEffect(() => {\n    if (tabState < 5) {\n      getUser().then((e) => {\n        checkLogin(e.email, e.pw);\n      });\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    getUser().then((e) => {\n      checkLogin(e.email, e.pw);\n    });\n  }, []);*/\n\n  useEffect(() => {\n    getProducts().then((z) => {\n      Object.keys(z).map((e, i) => {\n        if (Object.keys(z[i]).length > 1) {\n          let a = { ...z[i], cartnum: 0 };\n          putposter(i, a);\n        }\n      });\n      return 0;\n    });\n  }, []);\n\n  const resetGridList = async () => {\n    getLogin().then((e) => {\n      let a = Object.keys(e).map((q, i) => {\n        if (Object.keys(e[i]).length > 1) {\n          a[i] = { ...e[i], cartnum: 0 };\n        }\n      });\n      let y = fetch(\"http://localhost:3002/cartusers\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application.json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(a),\n      }).then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n    });\n  };\n\n  //useEffect(() => {}, [userName]);\n\n  const getter = async () => {};\n\n  const handleCart = async () => {\n    let q = 0;\n    let b = 0;\n    //console.log(\"asdf\" + JSON.stringify(a));\n    Object.keys(gridList).map((e, i) => {\n      //console.log(\"qwer\" + JSON.stringify(gridList[i].cartnum));\n      if (gridList[i].cartnum != undefined && gridList[i].price != undefined) {\n        //console.log(\"cartnum y cartnum\" + gridList[i].cartnum);\n        //console.log(\"cartnum y price \" + gridList[i].price);\n        q = gridList[i].cartnum * +gridList[i].price;\n        b += q;\n        //console.log(\"fdsa\" + gridList[i].cartnum);\n      }\n    });\n    //console.log(\"fdsa\" + b);\n    setCart(b);\n    return b;\n  };\n\n  return (\n    <div className={\"home\"}>\n      <div className={\"headers\"}>\n        <span\n          className={\"logbutton\"}\n          onClick={() => {\n            Object.keys(gridList).map((e, i) => {\n              if (Object.keys(gridList[i]).length > 1) {\n                let a = { ...gridList[i], cartnum: 0 };\n                putposter(i, a);\n                console.log(\"tab resetter putposter i\" + i);\n                console.log(\"tab resetter putposter a\" + JSON.stringify(a));\n              }\n              //loggedIn && setLoggedIn(false);\n              setLoggedIn(!loggedIn);\n              //setVisible(!visible);\n              //let x = apiValid ? \"true\" : \"False\";\n              //console.log(\"apiValidity\" + x);\n              let x = {\n                email: \"Guest\",\n                pw: \"\",\n                cartpredest: [],\n                cartcnum: [],\n              };\n              console.log(\"tab login button clicked\");\n              putactiveuser(x).then((e) => {\n                getUser();\n              });\n              if (apiValid == true) {\n                setApiValid(false);\n                setInputValue({ email: \"\", pw: \"\" });\n                putStatus({ status: \"false\" });\n                setValiTime(false);\n              } else {\n                handleCart();\n              }\n              setTabState(1);\n            });\n          }}\n        >\n          {apiValid ? \"Logout\" : \"Login\"}\n        </span>\n        <a>\n          {userName[\"email\"]}\n          {\"     \"}\n        </a>\n\n        <span className={\"cart\"}>\n          ${cart}\n          {\"  \"}\n        </span>\n        {/*<span className={\"cart\"}>\n          total:\n          {\"    \"}\n          {carTotal}\n        </span>*/}\n        <CartModal\n          carTotal={carTotal}\n          gridList={gridList}\n          setGridList={setGridList}\n          putposter={putposter}\n          userName={userName}\n          putuser={putuser}\n          setPreDest={setPreDest}\n          setTabState={setTabState}\n          apiValid={apiValid}\n        />\n      </div>\n      {/*<button onClick={() => putactiveuser({ guh: \"huh\" })}>aser</button>*/}\n      <Login\n        visible={visible}\n        setVisible={setVisible}\n        tabState={tabState}\n        setTabState={setTabState}\n        cart={cart}\n        setCart={setCart}\n        loggedIn={loggedIn}\n        setLoggedIn={setLoggedIn}\n        apiValid={apiValid}\n        setapiValid={setApiValid}\n        valiTime={valiTime}\n        setValiTime={setValiTime}\n        putStatus={putStatus}\n        carTotal={carTotal}\n        setCarTotal={setCarTotal}\n        setApiDone={setApiDone}\n        gridList={gridList}\n        setGridList={setGridList}\n        getLogin={getLogin}\n        checkLogin={checkLogin}\n        userName={userName}\n        setUserName={setUserName}\n        putuser={putuser}\n        postApi={postApi}\n        setPostApi={setPostApi}\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        putposter={putposter}\n        getProducts={getProducts}\n        setPreDest={setPreDest}\n        preDest={preDest}\n        pageNum={pageNum}\n        setPageNum={setPageNum}\n        emailErr={emailErr}\n        setEmailErr={setEmailErr}\n      />\n      <p />\n      <a>guh</a>\n      <p />\n      {/*<Login\n        visible={visible}\n        setVisible={setVisible}\n        tabState={tabState}\n        setTabState={setTabState}\n        /> ?????????*/}\n      <div className={\"footer\"}>footer</div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}